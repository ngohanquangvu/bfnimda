def change_cookies_fb(cookies: str):
    result = {}
    try:
        for i in cookies.split(';'):
            result.update({i.split('=')[0]: i.split('=')[1]})
        return result
    except(Exception,):
        for i in cookies.split('; '):
            result.update({i.split('=')[0]: i.split('=')[1]})
        return result

def eaaau(ck):
    ck = change_cookies_fb(ck)
    get_data = requests.get(
    "https://www.facebook.com/v2.3/dialog/oauth", params={
        'redirect_uri': 'fbconnect://success',
        'scope': 'email,publish_actions,publish_pages,user_about_me,user_actions.books,user_actions.music,user_actions.news,user_actions.video,user_activities,user_birthday,user_education_history,user_events,user_games_activity,user_groups,user_hometown,user_interests,user_likes,user_location,user_notes,user_photos,user_questions,user_relationship_details,user_relationships,user_religion_politics,user_status,user_subscriptions,user_videos,user_website,user_work_history,friends_about_me,friends_actions.books,friends_actions.music,friends_actions.news,friends_actions.video,friends_activities,friends_birthday,friends_education_history,friends_events,friends_games_activity,friends_groups,friends_hometown,friends_interests,friends_likes,friends_location,friends_notes,friends_photos,friends_questions,friends_relationship_details,friends_relationships,friends_religion_politics,friends_status,friends_subscriptions,friends_videos,friends_website,friends_work_history,ads_management,create_event,create_note,export_stream,friends_online_presence,manage_friendlists,manage_notifications,manage_pages,photo_upload,publish_stream,read_friendlists,read_insights,read_mailbox,read_page_mailboxes,read_requests,read_stream,rsvp_event,share_item,sms,status_update,user_online_presence,video_upload,xmpp_login',
        'response_type': 'token,code',
        'client_id': '356275264482347',
    }, cookies=ck, headers={
        'authority': 'www.facebook.com',
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/jxl,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'accept-language': 'vi,en-US;q=0.9,en;q=0.8',
        'cache-control': 'max-age=0',
        'dnt': '1',
        'dpr': '1.25',
        'sec-ch-ua': '"Chromium";v="117", "Not;A=Brand";v="8"',
        'sec-ch-ua-full-version-list': '"Chromium";v="117.0.5938.157", "Not;A=Brand";v="8.0.0.0"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-model': '""',
        'sec-ch-ua-platform': '"Windows"',
        'sec-ch-ua-platform-version': '"15.0.0"',
        'sec-fetch-dest': 'document',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-user': '?1',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36',
        'viewport-width': '1038',
    }
    ).text
    fb_dtsg = re.search('DTSGInitData",,{"token":"(.+?)"', get_data.replace('[]', '')).group(1)
    url = f'https://www.facebook.com/dialog/oauth/business/cancel/?app_id=121876164619130&version=v12.0&logger_id=&user_scopes[0]=user_birthday&user_scopes[1]=user_religion_politics&user_scopes[2]=user_relationships&user_scopes[3]=user_relationship_details&user_scopes[4]=user_hometown&user_scopes[5]=user_location&user_scopes[6]=user_likes&user_scopes[7]=user_education_history&user_scopes[8]=user_work_history&user_scopes[9]=user_website&user_scopes[10]=user_events&user_scopes[11]=user_photos&user_scopes[12]=user_videos&user_scopes[13]=user_friends&user_scopes[14]=user_about_me&user_scopes[15]=user_posts&user_scopes[16]=email&user_scopes[17]=manage_fundraisers&user_scopes[18]=read_custom_friendlists&user_scopes[19]=read_insights&user_scopes[20]=rsvp_event&user_scopes[21]=xmpp_login&user_scopes[22]=offline_access&user_scopes[23]=publish_video&user_scopes[24]=openid&user_scopes[25]=catalog_management&user_scopes[26]=user_messenger_contact&user_scopes[27]=gaming_user_locale&user_scopes[28]=private_computation_access&user_scopes[29]=instagram_business_basic&user_scopes[30]=user_managed_groups&user_scopes[31]=groups_show_list&user_scopes[32]=pages_manage_cta&user_scopes[33]=pages_manage_instant_articles&user_scopes[34]=pages_show_list&user_scopes[35]=pages_messaging&user_scopes[36]=pages_messaging_phone_number&user_scopes[37]=pages_messaging_subscriptions&user_scopes[38]=read_page_mailboxes&user_scopes[39]=ads_management&user_scopes[40]=ads_read&user_scopes[41]=business_management&user_scopes[42]=instagram_basic&user_scopes[43]=instagram_manage_comments&user_scopes[44]=instagram_manage_insights&user_scopes[45]=instagram_content_publish&user_scopes[46]=publish_to_groups&user_scopes[47]=groups_access_member_info&user_scopes[48]=leads_retrieval&user_scopes[49]=whatsapp_business_management&user_scopes[50]=instagram_manage_messages&user_scopes[51]=attribution_read&user_scopes[52]=page_events&user_scopes[53]=business_creative_transfer&user_scopes[54]=pages_read_engagement&user_scopes[55]=pages_manage_metadata&user_scopes[56]=pages_read_user_content&user_scopes[57]=pages_manage_ads&user_scopes[58]=pages_manage_posts&user_scopes[59]=pages_manage_engagement&user_scopes[60]=whatsapp_business_messaging&user_scopes[61]=instagram_shopping_tag_products&user_scopes[62]=read_audience_network_insights&user_scopes[63]=user_about_me&user_scopes[64]=user_actions.books&user_scopes[65]=user_actions.fitness&user_scopes[66]=user_actions.music&user_scopes[67]=user_actions.news&user_scopes[68]=user_actions.video&user_scopes[69]=user_activities&user_scopes[70]=user_education_history&user_scopes[71]=user_events&user_scopes[72]=user_friends&user_scopes[73]=user_games_activity&user_scopes[74]=user_groups&user_scopes[75]=user_hometown&user_scopes[76]=user_interests&user_scopes[77]=user_likes&user_scopes[78]=user_location&user_scopes[79]=user_managed_groups&user_scopes[80]=user_photos&user_scopes[81]=user_posts&user_scopes[82]=user_relationship_details&user_scopes[83]=user_relationships&user_scopes[84]=user_religion_politics&user_scopes[85]=user_status&user_scopes[86]=user_tagged_places&user_scopes[87]=user_videos&user_scopes[88]=user_website&user_scopes[89]=user_work_history&user_scopes[90]=email&user_scopes[91]=manage_notifications&user_scopes[92]=manage_pages&user_scopes[93]=publish_actions&user_scopes[94]=publish_pages&user_scopes[95]=read_friendlists&user_scopes[96]=read_insights&user_scopes[97]=read_page_mailboxes&user_scopes[98]=read_stream&user_scopes[99]=rsvp_event&user_scopes[100]=read_mailbox&user_scopes[101]=business_creative_management&user_scopes[102]=business_creative_insights&user_scopes[103]=business_creative_insights_share&user_scopes[104]=whitelisted_offline_access&redirect_uri=fbconnect%3A%2F%2Fsuccess&response_types[0]=token&response_types[1]=code&display=page&action=finish&return_scopes=false&return_format[0]=access_token&return_format[1]=code&tp=unspecified&sdk=&selected_business_id=&set_token_expires_in_60_days=false'
    response = requests.post(url,cookies=ck,data={'fb_dtsg': str(fb_dtsg)},)
    access_token = re.findall(r'access_token=([^"]*)&data_access_expiration_time', response.text)[0]
    return access_token

def setup(choose, cookie, page_id, admin_id, pass_admin):
    headers = {
    'authority': 'www.facebook.com',
    'cookie': cookie,
    }
    response = requests.get('https://www.facebook.com/', headers=headers).text
    dtsg = response.split('["DTSGInitData",[],{"token":"')[1].split(',')[0].replace('"','')


    h = {
        'Content-Type':'application/x-www-form-urlencoded',
        'Cookie':cookie,
    }

    d = f"av={page_id}&__aaid=0&__user={page_id}&__a=1&__req=o&__hs=19817.HYP%3Acomet_plat_default_pkg.2.1..2.1&dpr=1.5&__ccg=GOOD&__rev=1012539641&__s=547w6i%3A52buzi%3A0xxoej&__hsi=7354056242763316785&__dyn=7AzHxqU5a5Q1ryUbFp40C8b8nwgUao5-ewSwMwNw9G2S0im3y4o1DU2_CxS320om782Cwwwqo462mcwfG1Rx62G5Usw9m1YwBgK7o884y1uwoE2sx-3m1mzXw8W58jwGzEaE766FobrwKxm5o7G4-5o4q3y1MBx_wHwfCm2Sq2-azo2NwkQ0z8c86-bwHwNxe6Uak0zU8oC1Iwqo4e4UcEeE4WVU8Edouw&__csr=gqhQymMDb4ivJ-GW8pBjhGKiFe4FVlyFprHBAGWHAxzQBGWFAyp8GcAypoy4UVp8-dGbBzQKcx6498kxyh0yxl5GUkwxUGu9DAwHK78yaHSexO4VUlx6m5pUhwa6U8E9ogyE8UN2E5i4obo4i9woUoz8uwj8rBx-2W1Jwsomzo5-1Cw4Nw05Ryw3Gi01Bu02xR00gyEeVnw1Aq02P20dfw7cw7Dg12pA6e07tE0DR0&__comet_req=1&fb_dtsg={dtsg}&jazoest=25504&lsd=rc85URDWojCBCtkPGDO3WR&__spin_r=1012539641&__spin_b=trunk&__spin_t=1712249647&fb_api_caller_class=RelayModern&fb_api_req_friendly_name=ProfilePlusMarkReauthedMutation&variables=%7B%22input%22%3A%7B%22password%22%3A%7B%22sensitive_string_value%22%3A%22%23{pass_admin}%22%7D%2C%22actor_id%22%3A%22{page_id}%22%2C%22client_mutation_id%22%3A%221%22%7D%7D&server_timestamps=true&doc_id=5048033918567225"

    a = requests.post("https://www.facebook.com/api/graphql/", headers=h, data=d)
    if choose == 1:
        try:
            d_set_admin = f"av={page_id}&__aaid=0&__user={page_id}&__a=1&__req=p&__hs=19817.HYP%3Acomet_plat_default_pkg.2.1..2.1&dpr=1.5&__ccg=GOOD&__rev=1012539641&__s=547w6i%3A52buzi%3A0xxoej&__hsi=7354056242763316785&__dyn=7AzHxqU5a5Q1ryUbFp40C8b8nwgUao5-ewSwMwNw9G2S0im3y4o1DU2_CxS320om782Cwwwqo462mcwfG1Rx62G5Usw9m1YwBgK7o884y1uwoE2sx-3m1mzXw8W58jwGzEaE766FobrwKxm5o7G4-5o4q3y1MBx_wHwfCm2Sq2-azo2NwkQ0z8c86-bwHwNxe6Uak0zU8oC1Iwqo4e4UcEeE4WVU8Edouw&__csr=gqhQymMDb4ivJ-GW8pBjhGKiFe4FVlyFprHBAGWHAxzQBGWFAyp8GcAypoy4UVp8-dGbBzQKcx6498kxyh0yxl5GUkwxUGu9DAwHK78yaHSexO4VUlx6m5pUhwa6U8E9ogyE8UN2E5i4obo4i9woUoz8uwj8rBx-2W1Jwsomzo5-1Cw4Nw05Ryw3Gi01Bu02xR00gyEeVnw1Aq02P20dfw7cw7Dg12pA6e07tE0DR0&__comet_req=1&fb_dtsg={dtsg}&jazoest=25504&lsd=rc85URDWojCBCtkPGDO3WR&__spin_r=1012539641&__spin_b=trunk&__spin_t=1712249647&fb_api_caller_class=RelayModern&fb_api_req_friendly_name=ProfilePlusCoreAppAdminInviteMutation&variables=%7B%22input%22%3A%7B%22additional_profile_id%22%3A%22{page_id}%22%2C%22admin_id%22%3A%22100056767516324%22%2C%22admin_visibility%22%3A%22Unspecified%22%2C%22grant_full_control%22%3Afalse%2C%22actor_id%22%3A%22{page_id}%22%2C%22client_mutation_id%22%3A%222%22%7D%7D&server_timestamps=true&doc_id=5707097792725637"
            a = requests.post("https://www.facebook.com/api/graphql/", headers=h, data=d_set_admin)
            b =a.json()
            if '"is_invite_sent"' in a.text:
                print("Set admin success!")
            else:
                print("Set admin error!")
        except:
            print("Set admin error!")
    else:
        try:
            d_remove_admin = f"av={page_id}&__aaid=0&__user={page_id}&__a=1&__req=l&__hs=19816.HYP%3Acomet_plat_default_pkg.2.1..2.1&dpr=1.5&__ccg=GOOD&__rev=1012513638&__s=rune1r%3Ahc0oyp%3Ayojbgm&__hsi=7353752630854221061&__dyn=7AzHxqU5a5Q1ryUbFp40C8b8nwgUao5-ewSwMwNw9G2S0im3y4o1DU2_CxS320om782Cwwwqo462mcwfG1Rx62G5Usw9m1YwBgK7o884y1uwoE2sx-3m1mzXw8W58jwGzEaE766FobrwKxm5o7G4-5o4q3y1MBx_wHwfCm2Sq2-azo2NwkQ0z8c86-bwHwNxe6Uak0zU8oC1Iwqo4e4UcEeE4WVU8Edouw&__csr=guO8W5NkmCWF9934F2eCOOfAx2Uiiyby8GQSmVauurLByHDKqudyHKayV8pCyVESUyKl2EO2m9Ayu6HG5EWu8GfxS9G7u9xOfx25ES9WDAQEvyrgoxXwDwrooxG1syoS3Lg_wBwmUy5U8U7efzo6Si4oO2O1bwcBwYw8q0-o01v4E0Bt6y80l7w0qVGBTwcq07So08To0hgw7jw8p04Hl0UQ023G09jwoo&__comet_req=1&fb_dtsg={dtsg}&jazoest=25501&lsd=uAJ4H3DJAW7DyPbgKVXA7S&__spin_r=1012513638&__spin_b=trunk&__spin_t=1712178958&fb_api_caller_class=RelayModern&fb_api_req_friendly_name=ProfilePlusRemoveCoreAppAdminMutation&variables=%7B%22input%22%3A%7B%22additional_profile_id%22%3A%22{page_id}%22%2C%22admin_id%22%3A%22{admin_id}%22%2C%22grant_full_control%22%3Afalse%2C%22actor_id%22%3A%22{page_id}%22%2C%22client_mutation_id%22%3A%222%22%7D%7D&server_timestamps=true&doc_id=9529441547128945"
            a = requests.post("https://www.facebook.com/api/graphql/", headers=h, data=d_remove_admin)
            b =a.json()
            if 'remove_core_app_admin' in a.text:
                print("Remove admin success!")
            else:
                print("Remove admin error!")
        except:
            print("Remove admin error!")

os.system("cls" if os.name == "nt" else "clear")

while True:

    cookie = input("Cookie: ")
    try:
        access_token = eaaau(cookie)
        break
    except:
        print("Cookie error or die!\n")

list_page = []

headers = {
    "Content-Type": "application/x-www-form-urlencoded",
    "Content-Encoding": "gzip",
    "X-Fb-Privacy-Context": "c0000000ef061c4c",
    "User-Agent": "[FBAN/FB4A;FBAV/340.0.0.27.113;FBBV/324485361;FBDM/{density=2.0,width=1600,height=900};FBLC/vi_VN;FBRV/327062583;FBCR/Viettel Mobile;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-G988N;FBSV/7.1.2;FBOP/9;FBCA/x86:armeabi-v7a;]",
    "X-Fb-Net-Hni": "45204",
    "X-Fb-Sim-Hni": "45204",
    "Authorization": f"OAuth {access_token}",
    "X-Fb-Connection-Type": "WIFI",
    "X-Tigon-Is-Retry": "False",
    "X-Fb-Rmd": "cached=0;state=URL_ELIGIBLE",
    "X-Fb-Session-Id": "nid=rZj/oPhNeTw+;pid=Main;tid=181;nc=0;fc=0;bc=0;cid=c741f540613e0b5c25ddd4f17f27a5bc",
    "X-Fb-Device-Group": "6201",
    "X-Fb-Friendly-Name": "ProfileSwitcherQuery",
    "X-Fb-Request-Analytics-Tags": "graphservice",
    "Accept-Encoding": "gzip, deflate, br",
    "X-Fb-Http-Engine": "Liger",
    "X-Fb-Client-Ip": "True",
    "X-Fb-Server-Cluster": "True",
    "X-Fb-Connection-Token": "c741f540613e0b5c25ddd4f17f27a5bc",
    "Content-Length": "431"
}
uid = requests.get(f"https://graph.facebook.com/v19.0/me?fields=id&access_token={access_token}").json()["id"]
d = gzip.compress(('doc_id=4460605510683312&method=post&locale=vi_VN&pretty=false&format=json&purpose=fetch&variables={"profileID":"'+uid+'","profile_switcher_connection_first":10,"main_profile_picture_size":80,"additional_profile_picture_size":80,"nt_context":{"styles_id":"0ea7b3133cb03579ffa17d6692f27b4b","using_white_navbar":true,"pixel_ratio":2,"bloks_version":"54e83f9cf589246976cdfddfb9cc34d4d3c5813b772f83a05aed175c272a8430"},"scale":"2"}&fb_api_req_friendly_name=ProfileSwitcherQuery&fb_api_caller_class=graphservice&fb_api_analytics_tags=["At_Connection","GraphServices"]&server_timestamps=true').encode('utf-8'))

a = requests.post("https://graph.facebook.com/graphql", headers=headers, data=d).json()
pages = (a["data"]["user"]["profile_switcher_eligible_profiles"]["edges"])
for i in pages:
    json_strings = i["node"]["session_info"]["session_cookies"]

    cookie = ""

    # Loop through the list of JSON strings
    for json_string in json_strings:
        # Parse the JSON string into a Python dictionary
        data = json.loads(json_string)
        
        # Add the name and value to the cookie string
        cookie += f'{data["name"]}={data["value"]}; '

    list_page.append([i["node"]["profile"]["name"], i["node"]["profile"]["id"], i["node"]["session_info"]["access_token"], cookie])

os.system("cls" if os.name == "nt" else "clear")

while True:
    for i in list_page:
        print(f"{list_page.index(i)+1}. {i[0]} - {i[1]}")
    page = input("Choose page: ")
    if page.isdigit() and int(page) <= len(list_page):
        choice = list_page[int(page)-1]
        break
    os.system("cls" if os.name == "nt" else "clear")

os.system("cls" if os.name == "nt" else "clear")
page_id = choice[1]
token = choice[2]
ck_page = choice[3]


list_admin = []

h = {
    'Content-Type': 'application/x-www-form-urlencoded',
    'Content-Encoding': 'gzip',
    'User-Agent': '[FBAN/FB4A;FBAV/340.0.0.27.113;FBBV/324485361;FBDM/{density=2.0,width=1600,height=900};FBLC/vi_VN;FBRV/0;FBCR/Viettel Mobile;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-G988N;FBSV/7.1.2;FBOP/9;FBCA/x86:armeabi-v7a;]',
    'Authorization': f'OAuth {token}',
    'X-Fb-Connection-Type': 'WIFI',
    'X-Tigon-Is-Retry': 'False',
    'X-Fb-Rmd': 'cached=0;state=URL_ELIGIBLE',
    'X-Fb-Device-Group': '6201',
    'X-Fb-Friendly-Name': 'NativeTemplateScreenQuery',
    'X-Fb-Request-Analytics-Tags': 'graphservice',
    'Accept-Encoding': 'gzip, deflate, br',
    'X-Fb-Http-Engine': 'Liger',
    'X-Fb-Client-Ip': 'True',
    'X-Fb-Server-Cluster': 'True',
}

s = gzip.compress("doc_id=6186793871392145&method=post&locale=vi_VN&pretty=false&format=json&purpose=fetch&variables=%7B%22params%22%3A%7B%22path%22%3A%22%2Fnt%2Fprofile%2Fadmin_management%22%2C%22nt_context%22%3A%7B%22styles_id%22%3A%220ea7b3133cb03579ffa17d6692f27b4b%22%2C%22using_white_navbar%22%3Atrue%2C%22pixel_ratio%22%3A2%2C%22bloks_version%22%3A%2254e83f9cf589246976cdfddfb9cc34d4d3c5813b772f83a05aed175c272a8430%22%7D%2C%22params%22%3A%22%7B%5C%22screen_id%5C%22%3A%5C%22%5B%5C%5C%5C%226vpxpo%3A0%5C%5C%5C%22%2Cnull%5D%5C%22%7D%22%2C%22extra_client_data%22%3A%7B%7D%7D%2C%22scale%22%3A%222%22%2C%22nt_context%22%3A%7B%22styles_id%22%3A%220ea7b3133cb03579ffa17d6692f27b4b%22%2C%22using_white_navbar%22%3Atrue%2C%22pixel_ratio%22%3A2%2C%22bloks_version%22%3A%2254e83f9cf589246976cdfddfb9cc34d4d3c5813b772f83a05aed175c272a8430%22%7D%7D&fb_api_req_friendly_name=NativeTemplateScreenQuery&fb_api_caller_class=graphservice&fb_api_analytics_tags=%5B%22GraphServices%22%5D&server_timestamps=true".encode('utf-8'))

a = requests.post('https://graph.facebook.com/graphql/', headers=h, data=s).content


# Assume `a` is your content
data = json.loads(a)
s = str(data["data"]["native_template_screen"]["nt_bundle"]).split("'nt_bundle_tree': ")[1].split("'nt_bundle_attributes'")[0]
s = str(unquote(bytes(s, 'utf-8').decode('unicode_escape'))).split(r'[{"\"":"\uc36f","2":"FF050505","\u00ee":"FFE4E6EB","5":1,"6":17,"7":500,":":17,";":500,"?":20,"C":')

s = s[1:]

for i in s:
    uid = i.split('"}]}]}]}],"9":"FFFFFFFF","V":"FF242526"')[0].split('-')[-1]
    name = str(i.split(',"K":"END","(":1,"&":')[0].replace('"',"")).encode('utf-8').decode('unicode_escape')
    list_admin.append([name, uid])

while True:
    print(f"Page: {choice[0]} - {choice[1]}")
    print("List admin:")
    for i in list_admin:
        print(f"{list_admin.index(i)+1}. {i[0]} - {i[1]}")
    print("Setup page: ")
    print("1. Add admin")
    print("2. Remove admin")
    print("3. Update admin list")
    a = input("Input your choice:")
    if a.isdigit() and int(a) <= 3 and int(a) > 0:
        os.system("cls" if os.name == "nt" else "clear")
        if a == "1":
            admin_id = input("Admin id: ")
            page_id_url = ck_page.split("; i_user=")[1].split(";")[0] 
            pass_admin = input("Password admin (password of cookie account, not cookie page): ")
            setup(1, ck_page, page_id_url, admin_id, pass_admin)
        elif a == "2":
            while True:
                for i in list_admin:
                    print(f"{list_admin.index(i)+1}. {i[0]} - {i[1]}")
                admin = input("Choose admin: ")
                if admin.isdigit() and int(admin) <= len(list_admin):
                    admin_id = list_admin[int(admin)-1][1]
                    break
            page_id_url = ck_page.split("; i_user=")[1].split(";")[0] 
            pass_admin = input("Password admin (password of cookie account, not cookie page): ")
            setup(2, ck_page, page_id_url, admin_id, pass_admin)
        else:
            list_admin = []

            h = {
                'Content-Type': 'application/x-www-form-urlencoded',
                'Content-Encoding': 'gzip',
                'User-Agent': '[FBAN/FB4A;FBAV/340.0.0.27.113;FBBV/324485361;FBDM/{density=2.0,width=1600,height=900};FBLC/vi_VN;FBRV/0;FBCR/Viettel Mobile;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-G988N;FBSV/7.1.2;FBOP/9;FBCA/x86:armeabi-v7a;]',
                'Authorization': f'OAuth {token}',
                'X-Fb-Connection-Type': 'WIFI',
                'X-Tigon-Is-Retry': 'False',
                'X-Fb-Rmd': 'cached=0;state=URL_ELIGIBLE',
                'X-Fb-Device-Group': '6201',
                'X-Fb-Friendly-Name': 'NativeTemplateScreenQuery',
                'X-Fb-Request-Analytics-Tags': 'graphservice',
                'Accept-Encoding': 'gzip, deflate, br',
                'X-Fb-Http-Engine': 'Liger',
                'X-Fb-Client-Ip': 'True',
                'X-Fb-Server-Cluster': 'True',
            }

            s = gzip.compress("doc_id=6186793871392145&method=post&locale=vi_VN&pretty=false&format=json&purpose=fetch&variables=%7B%22params%22%3A%7B%22path%22%3A%22%2Fnt%2Fprofile%2Fadmin_management%22%2C%22nt_context%22%3A%7B%22styles_id%22%3A%220ea7b3133cb03579ffa17d6692f27b4b%22%2C%22using_white_navbar%22%3Atrue%2C%22pixel_ratio%22%3A2%2C%22bloks_version%22%3A%2254e83f9cf589246976cdfddfb9cc34d4d3c5813b772f83a05aed175c272a8430%22%7D%2C%22params%22%3A%22%7B%5C%22screen_id%5C%22%3A%5C%22%5B%5C%5C%5C%226vpxpo%3A0%5C%5C%5C%22%2Cnull%5D%5C%22%7D%22%2C%22extra_client_data%22%3A%7B%7D%7D%2C%22scale%22%3A%222%22%2C%22nt_context%22%3A%7B%22styles_id%22%3A%220ea7b3133cb03579ffa17d6692f27b4b%22%2C%22using_white_navbar%22%3Atrue%2C%22pixel_ratio%22%3A2%2C%22bloks_version%22%3A%2254e83f9cf589246976cdfddfb9cc34d4d3c5813b772f83a05aed175c272a8430%22%7D%7D&fb_api_req_friendly_name=NativeTemplateScreenQuery&fb_api_caller_class=graphservice&fb_api_analytics_tags=%5B%22GraphServices%22%5D&server_timestamps=true".encode('utf-8'))

            a = requests.post('https://graph.facebook.com/graphql/', headers=h, data=s).content


            # Assume `a` is your content
            data = json.loads(a)
            s = str(data["data"]["native_template_screen"]["nt_bundle"]).split("'nt_bundle_tree': ")[1].split("'nt_bundle_attributes'")[0]
            s = str(unquote(bytes(s, 'utf-8').decode('unicode_escape'))).split(r'[{"\"":"\uc36f","2":"FF050505","\u00ee":"FFE4E6EB","5":1,"6":17,"7":500,":":17,";":500,"?":20,"C":')

            s = s[1:]

            for i in s:
                uid = i.split('"}]}]}]}],"9":"FFFFFFFF","V":"FF242526"')[0].split('-')[-1]
                name = str(i.split(',"K":"END","(":1,"&":')[0].replace('"',"")).encode('utf-8').decode('unicode_escape')
                list_admin.append([name, uid])
        end = input("Do you want to continue? (y/n): ")
    os.system("cls" if os.name == "nt" else "clear")
