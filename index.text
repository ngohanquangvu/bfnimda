def eaabw(cookie, proxy):
    head = {
        "cookie":cookie,
        "Host":"m.facebook.com",
        "cache-control":"max-age=0",
        "upgrade-insecure-requests":"1",
        "origin":"https://mbasic.facebook.com",
        "content-type":"application/x-www-form-urlencoded",
        "user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
        "accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
        "x-requested-with":"mark.via.gp",
        "sec-fetch-site":"same-origin",
        "sec-fetch-mode":"navigate",
        "sec-fetch-user":"?1",
        "sec-fetch-dest":"document",
        "referer":"https://mbasic.facebook.com/dialog/oauth?encrypted_query_string=AeC8BVQ7ctjgpS9OzeGcgZu8VAHuuYRJlLKyB5NEYWlKsjPkU7BA5r0pbsXZLqw7Nlde8AWnp3Sa1XIq20qnPoHpzNEgb4qLpydMqy6CixrSTHOGiMs1-5_3j9tIeUcCV7vBUm1y_IQjy1dmjzrWzmAhtgz7scvu2CFVtSD1irg8j_73c8N4Bvpr9KxEmPgyHAcZMhhZ6zkw8Sl64BXgD1Gn8n3kPuSjQWRdCpBjqJbZyHkJuuI_fUeWrYNc6QdkdZPos3MkYQlUuEoZhFnXH7s_OytvqmIbLSHBpoPRXLSmv3UX6LNfWZp7pv0ZoOQ8v3opxbOuse0J-LvThFlu-i4mGKHHqA9TdCq2TLcAAAQzOcASfjFbs_H4E66168gYBHylPtHjsjAzUAo1ILy5p5TQvbZxrk4kpdOjhOoKj-pmOASDwXS6VH7Isup9j4eW1lAjDg-V2zo60W7Woi-HqPeliE5BiEib7lp7PBC0njUNZP8TXTD2XWUMgyO2wpHk5GYd1x1J1fSEzRzvfvQ4b8pz6f9qRfN1wXJk6Ls9wJBStJQViipbU3QGoo9v2LwuCNM9k4NHtv-1o7kPqXX0v5Vuuwbx6tN112i9_zJVbr7NafaatOR0cPt0k09wfvXdcOWOdBeAho28-aqGrwrZhga80JYJ5u5Jwxoajquxb8kEDdUjO8STzMv_9dDNUMSFyxuE-KKHdaYbnQB2AGHYQF_TkOL6Ck545wft9_dG0lMv9-XY4TOmlymzIGAG_Mt0wXM4G4wHuJ6uGzH3B0sOs0e2aVyk-Wzf14eZMs0vLIBdGyrSyt04BFupFMFAMu3WpMNJJhg87xG6_p9esk8O9Yl0kVve8CYudg-ZMZ7cXJTyXG4myoC-mJNyecUYitOdOFtShfY_WOv5-luqmbAic3nN8pWKvUdApO7uxodX-0iT1yrO26zkvZ5dkBOLkQUfEsDM-56sdOLEmKAeJXpAzuTl9cIHIlDgWHtq0iuYV48uz0ejcVovPzznIo-IwX36CAyPnlF7VvtTDec_9O1VFvWl25V56DaEunKr8A5Tx4CZPw2Z-EsGkKsW9eaGpHBgjMUHvr30vEKC8ShxthHdHN9EQhPrPyIIVGtw",
        "accept-encoding":"gzip, deflate",
        "accept-language":"vi-VN,vi;q=0.9,en-US;q=0.8,en;q=0.7",
        }
    get = requests.get("https://mbasic.facebook.com/dialog/oauth?encrypted_query_string=AeC8BVQ7ctjgpS9OzeGcgZu8VAHuuYRJlLKyB5NEYWlKsjPkU7BA5r0pbsXZLqw7Nlde8AWnp3Sa1XIq20qnPoHpzNEgb4qLpydMqy6CixrSTHOGiMs1-5_3j9tIeUcCV7vBUm1y_IQjy1dmjzrWzmAhtgz7scvu2CFVtSD1irg8j_73c8N4Bvpr9KxEmPgyHAcZMhhZ6zkw8Sl64BXgD1Gn8n3kPuSjQWRdCpBjqJbZyHkJuuI_fUeWrYNc6QdkdZPos3MkYQlUuEoZhFnXH7s_OytvqmIbLSHBpoPRXLSmv3UX6LNfWZp7pv0ZoOQ8v3opxbOuse0J-LvThFlu-i4mGKHHqA9TdCq2TLcAAAQzOcASfjFbs_H4E66168gYBHylPtHjsjAzUAo1ILy5p5TQvbZxrk4kpdOjhOoKj-pmOASDwXS6VH7Isup9j4eW1lAjDg-V2zo60W7Woi-HqPeliE5BiEib7lp7PBC0njUNZP8TXTD2XWUMgyO2wpHk5GYd1x1J1fSEzRzvfvQ4b8pz6f9qRfN1wXJk6Ls9wJBStJQViipbU3QGoo9v2LwuCNM9k4NHtv-1o7kPqXX0v5Vuuwbx6tN112i9_zJVbr7NafaatOR0cPt0k09wfvXdcOWOdBeAho28-aqGrwrZhga80JYJ5u5Jwxoajquxb8kEDdUjO8STzMv_9dDNUMSFyxuE-KKHdaYbnQB2AGHYQF_TkOL6Ck545wft9_dG0lMv9-XY4TOmlymzIGAG_Mt0wXM4G4wHuJ6uGzH3B0sOs0e2aVyk-Wzf14eZMs0vLIBdGyrSyt04BFupFMFAMu3WpMNJJhg87xG6_p9esk8O9Yl0kVve8CYudg-ZMZ7cXJTyXG4myoC-mJNyecUYitOdOFtShfY_WOv5-luqmbAic3nN8pWKvUdApO7uxodX-0iT1yrO26zkvZ5dkBOLkQUfEsDM-56sdOLEmKAeJXpAzuTl9cIHIlDgWHtq0iuYV48uz0ejcVovPzznIo-IwX36CAyPnlF7VvtTDec_9O1VFvWl25V56DaEunKr8A5Tx4CZPw2Z-EsGkKsW9eaGpHBgjMUHvr30vEKC8ShxthHdHN9EQhPrPyIIVGtw", headers=head, proxies=proxy).text
    fb = get.split('name="fb_dtsg" value="')[1].split('"')[0]
    jazoest = get.split('name="jazoest" value="')[1].split('"')[0]
    scope = get.split('name="scope" value="')[1].split('"')[0]
    logger_id = get.split('name="logger_id" value="')[1].split('"')[0]
    encrypted_post_body = get.split('name="encrypted_post_body" value="')[1].split('"')[0]
    data = {
	"cookie":cookie,
	"fb_dtsg": fb,
	"jazoest":"25480",
	"scope":scope,
	"display":"touch",
	"sdk":"",
	"sdk_version":"",
	"domain":"",
	"sso_device":"ios",
	"state":"",
	"user_code":"",
	"nonce":"",
	"logger_id":logger_id,
	"auth_type":"",
	"auth_nonce":"",
	"code_challenge":"",
	"code_challenge_method":"",
	"encrypted_post_body":encrypted_post_body,
	"return_format[]":"access_token"
	}
    get = requests.post("https://m.facebook.com/dialog/oauth/skip/submit/?paipv=0&eav=Afa2uLWDW0GTp9dR1Q9kn2mF90FWnFS6bk2nYDeGhRY_vS_DZOkGVLsNRVEQUHAp9VU", headers=head, data=data, proxies=proxy).text
    token = get.split("#access_token=")[1].split("&")[0]
    return token

def setup(choose, cookie, page_id, admin_id, pass_admin):
    headers = {
    'authority': 'www.facebook.com',
    'cookie': cookie,
    }
    response = requests.get('https://www.facebook.com/', headers=headers).text
    dtsg = response.split('["DTSGInitData",[],{"token":"')[1].split(',')[0].replace('"','')


    h = {
        'Content-Type':'application/x-www-form-urlencoded',
        'Cookie':cookie,
    }

    d = f"av={page_id}&__aaid=0&__user={page_id}&__a=1&__req=o&__hs=19817.HYP%3Acomet_plat_default_pkg.2.1..2.1&dpr=1.5&__ccg=GOOD&__rev=1012539641&__s=547w6i%3A52buzi%3A0xxoej&__hsi=7354056242763316785&__dyn=7AzHxqU5a5Q1ryUbFp40C8b8nwgUao5-ewSwMwNw9G2S0im3y4o1DU2_CxS320om782Cwwwqo462mcwfG1Rx62G5Usw9m1YwBgK7o884y1uwoE2sx-3m1mzXw8W58jwGzEaE766FobrwKxm5o7G4-5o4q3y1MBx_wHwfCm2Sq2-azo2NwkQ0z8c86-bwHwNxe6Uak0zU8oC1Iwqo4e4UcEeE4WVU8Edouw&__csr=gqhQymMDb4ivJ-GW8pBjhGKiFe4FVlyFprHBAGWHAxzQBGWFAyp8GcAypoy4UVp8-dGbBzQKcx6498kxyh0yxl5GUkwxUGu9DAwHK78yaHSexO4VUlx6m5pUhwa6U8E9ogyE8UN2E5i4obo4i9woUoz8uwj8rBx-2W1Jwsomzo5-1Cw4Nw05Ryw3Gi01Bu02xR00gyEeVnw1Aq02P20dfw7cw7Dg12pA6e07tE0DR0&__comet_req=1&fb_dtsg={dtsg}&jazoest=25504&lsd=rc85URDWojCBCtkPGDO3WR&__spin_r=1012539641&__spin_b=trunk&__spin_t=1712249647&fb_api_caller_class=RelayModern&fb_api_req_friendly_name=ProfilePlusMarkReauthedMutation&variables=%7B%22input%22%3A%7B%22password%22%3A%7B%22sensitive_string_value%22%3A%22%23{pass_admin}%22%7D%2C%22actor_id%22%3A%22{page_id}%22%2C%22client_mutation_id%22%3A%221%22%7D%7D&server_timestamps=true&doc_id=5048033918567225"

    a = requests.post("https://www.facebook.com/api/graphql/", headers=h, data=d)
    if choose == 1:
        try:
            d_set_admin = f"av={page_id}&__aaid=0&__user={page_id}&__a=1&__req=p&__hs=19817.HYP%3Acomet_plat_default_pkg.2.1..2.1&dpr=1.5&__ccg=GOOD&__rev=1012539641&__s=547w6i%3A52buzi%3A0xxoej&__hsi=7354056242763316785&__dyn=7AzHxqU5a5Q1ryUbFp40C8b8nwgUao5-ewSwMwNw9G2S0im3y4o1DU2_CxS320om782Cwwwqo462mcwfG1Rx62G5Usw9m1YwBgK7o884y1uwoE2sx-3m1mzXw8W58jwGzEaE766FobrwKxm5o7G4-5o4q3y1MBx_wHwfCm2Sq2-azo2NwkQ0z8c86-bwHwNxe6Uak0zU8oC1Iwqo4e4UcEeE4WVU8Edouw&__csr=gqhQymMDb4ivJ-GW8pBjhGKiFe4FVlyFprHBAGWHAxzQBGWFAyp8GcAypoy4UVp8-dGbBzQKcx6498kxyh0yxl5GUkwxUGu9DAwHK78yaHSexO4VUlx6m5pUhwa6U8E9ogyE8UN2E5i4obo4i9woUoz8uwj8rBx-2W1Jwsomzo5-1Cw4Nw05Ryw3Gi01Bu02xR00gyEeVnw1Aq02P20dfw7cw7Dg12pA6e07tE0DR0&__comet_req=1&fb_dtsg=NAcPtUabiKVonJOUoR0s-Ph3f-PtvGCOt3KsrJeVIVr1lnHBFWVYjJQ%3A47%3A1712178617&jazoest=25504&lsd=rc85URDWojCBCtkPGDO3WR&__spin_r=1012539641&__spin_b=trunk&__spin_t=1712249647&fb_api_caller_class=RelayModern&fb_api_req_friendly_name=ProfilePlusCoreAppAdminInviteMutation&variables=%7B%22input%22%3A%7B%22additional_profile_id%22%3A%22{page_id}%22%2C%22admin_id%22%3A%22100056767516324%22%2C%22admin_visibility%22%3A%22Unspecified%22%2C%22grant_full_control%22%3Afalse%2C%22actor_id%22%3A%22{page_id}%22%2C%22client_mutation_id%22%3A%222%22%7D%7D&server_timestamps=true&doc_id=5707097792725637"
            a = requests.post("https://www.facebook.com/api/graphql/", headers=h, data=d_set_admin)
            a =a.json()
            print("Set admin success!")
        except:
            print("Set admin error!")
    else:
        try:
            d_remove_admin = f"av={page_id}&__aaid=0&__user={page_id}&__a=1&__req=l&__hs=19816.HYP%3Acomet_plat_default_pkg.2.1..2.1&dpr=1.5&__ccg=GOOD&__rev=1012513638&__s=rune1r%3Ahc0oyp%3Ayojbgm&__hsi=7353752630854221061&__dyn=7AzHxqU5a5Q1ryUbFp40C8b8nwgUao5-ewSwMwNw9G2S0im3y4o1DU2_CxS320om782Cwwwqo462mcwfG1Rx62G5Usw9m1YwBgK7o884y1uwoE2sx-3m1mzXw8W58jwGzEaE766FobrwKxm5o7G4-5o4q3y1MBx_wHwfCm2Sq2-azo2NwkQ0z8c86-bwHwNxe6Uak0zU8oC1Iwqo4e4UcEeE4WVU8Edouw&__csr=guO8W5NkmCWF9934F2eCOOfAx2Uiiyby8GQSmVauurLByHDKqudyHKayV8pCyVESUyKl2EO2m9Ayu6HG5EWu8GfxS9G7u9xOfx25ES9WDAQEvyrgoxXwDwrooxG1syoS3Lg_wBwmUy5U8U7efzo6Si4oO2O1bwcBwYw8q0-o01v4E0Bt6y80l7w0qVGBTwcq07So08To0hgw7jw8p04Hl0UQ023G09jwoo&__comet_req=1&fb_dtsg={dtsg}&jazoest=25501&lsd=uAJ4H3DJAW7DyPbgKVXA7S&__spin_r=1012513638&__spin_b=trunk&__spin_t=1712178958&fb_api_caller_class=RelayModern&fb_api_req_friendly_name=ProfilePlusRemoveCoreAppAdminMutation&variables=%7B%22input%22%3A%7B%22additional_profile_id%22%3A%22{page_id}%22%2C%22admin_id%22%3A%22{admin_id}%22%2C%22grant_full_control%22%3Afalse%2C%22actor_id%22%3A%22{page_id}%22%2C%22client_mutation_id%22%3A%222%22%7D%7D&server_timestamps=true&doc_id=9529441547128945"
            a = requests.post("https://www.facebook.com/api/graphql/", headers=h, data=d_remove_admin).json()
            print("Remove admin success!")
        except:
            print("Remove admin error!")

os.system("cls" if os.name == "nt" else "clear")

while True:

    cookie = input("Cookie: ")
    try:
        access_token = eaabw(cookie, None)
        break
    except:
        print("Cookie error or die!\n")

list_page = []

url = f'https://graph.facebook.com/v11.0/me/accounts'
params = {'access_token': access_token}

while url:
    response = requests.get(url, params=params)
    data = response.json()
    pages = data['data']
    for page in pages:
        list_page.append([page['name'],page['id']])
    if 'paging' in data and 'cursors' in data['paging']:
        url = f"https://graph.facebook.com/v11.0/me/accounts?after={data['paging']['cursors']['after']}" if 'after' in data['paging']['cursors'] else None
    else:
        url = None
os.system("cls" if os.name == "nt" else "clear")

while True:
    for i in list_page:
        print(f"{list_page.index(i)+1}. {i[0]} - {i[1]}")
    page = input("Choose page: ")
    if page.isdigit() and int(page) <= len(list_page):
        choice = list_page[int(page)-1]
        break
    os.system("cls" if os.name == "nt" else "clear")

os.system("cls" if os.name == "nt" else "clear")
page_id = choice[1]

url = f'https://graph.facebook.com/v11.0/{page_id}/roles'
params = {'access_token': access_token}

list_admin = []
while url:
    response = requests.get(url, params=params)
    data = response.json()
    admins = data['data']
    for admin in admins:
        list_admin.append([admin['name'],admin['id']])
    if 'paging' in data and 'cursors' in data['paging']:
        url  = f'https://graph.facebook.com/v11.0/{page_id}/roles?after={data['paging']['cursors']['after']}' if 'after' in data['paging']['cursors'] else None
    else: url = None

while True:
    print(f"Page: {choice[0]} - {choice[1]}")
    print("List admin:")
    for i in list_admin:
        print(f"{list_admin.index(i)+1}. {i[0]} - {i[1]}")
    print("Setup page: ")
    print("1. Add admin")
    print("2. Remove admin")
    print("3. Update admin list")
    a = input("Input your choice:")
    if a.isdigit() and int(a) <= 3 and int(a) > 0:
        os.system("cls" if os.name == "nt" else "clear")
        if a == "1":
            admin_id = input("Admin id: ")
            page_id_url = input("Page id (id page get from url): ")
            cookie_page = input("Cookie page: ")
            pass_admin = input("Password admin (password of cookie account, not cookie page): ")
            setup(1, cookie_page, page_id_url, admin_id, pass_admin)
        elif a == "2":
            while True:
                for i in list_admin:
                    print(f"{list_admin.index(i)+1}. {i[0]} - {i[1]}")
                admin = input("Choose admin: ")
                if admin.isdigit() and int(admin) <= len(list_admin):
                    admin_id = list_admin[int(admin)-1][1]
                    break
            page_id_url = input("Page id (id page get from url): ")
            cookie_page = input("Cookie page: ")
            pass_admin = input("Password admin (password of cookie account, not cookie page): ")
            setup(2, cookie_page, page_id_url, admin_id, pass_admin)
        else:
            url = f'https://graph.facebook.com/v11.0/{page_id}/roles'
            params = {'access_token': access_token}
            list_admin = []
            while url:
                response = requests.get(url, params=params)
                data = response.json()
                admins = data['data']
                for admin in admins:
                    list_admin.append([admin['name'],admin['id']])
                if 'paging' in data and 'cursors' in data['paging']:
                    url  = f'https://graph.facebook.com/v11.0/{page_id}/roles?after={data['paging']['cursors']['after']}' if 'after' in data['paging']['cursors'] else None
                else: url = None
        end = input("Do you want to continue? (y/n): ")
    os.system("cls" if os.name == "nt" else "clear")
